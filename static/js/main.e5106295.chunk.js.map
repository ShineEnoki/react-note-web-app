{"version":3,"sources":["components/NoteCard.jsx","pages/Notes.jsx","pages/Create.js","components/Layout.jsx","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","data","concat","category","red","orange","blue","green","color","NoteCard","_ref","handleDelete","classes","_jsxs","Card","elevation","children","_jsx","CardHeader","Avatar","className","toUpperCase","action","IconButton","onClick","id","DeleteOutline","title","subheader","CardContent","Typography","variant","details","db","Dexie","version","stores","notesData","breakpoints","default","Notes","_useState","useState","_useState2","_slicedToArray","notes","setNotes","allItems","useLiveQuery","toArray","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newNote","wrap","_context","prev","next","delete","filter","note","stop","_x","apply","arguments","Container","Masonry","breakpointCols","columnClassName","map","item","field","marginTop","marginBottom","display","Create","history","useHistory","setTitle","_useState3","_useState4","setDetails","_useState5","_useState6","titleError","setTitleError","_useState7","_useState8","detailsError","setDetailsError","_useState9","_useState10","setCategory","handleSubmit","e","preventDefault","add","then","push","size","component","gutterBottom","noValidate","autoComplete","onSubmit","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","sx","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","KeyboardArrowRightIcon","theme","page","width","padding","spacing","drawer","window","innerWidth","drawerPaper","root","active","appbar","toolbar","mixins","date","flexGrow","marginLeft","Layout","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","AppBar","Toolbar","textAlign","format","Date","src","Drawer","anchor","paper","List","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createTheme","palette","main","secondary","typography","fontFamily","App","ThemeProvider","Router","Switch","Route","exact","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5106295.chunk.js","sourcesContent":["import React from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\nimport { blue, green, orange, red, yellow } from \"@mui/material/colors\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: (data) => {\n            let color = () =>{ switch(data.category){\n                case 'work':\n                    return red[500] ;\n                case 'todos':\n                    return orange[500];\n                case \"reminders\":\n                    return blue[700];\n                default:\n                    return green[700];\n                };\n            }\n            return `${color()} !important`;\n        }\n    }\n});\n\nconst NoteCard = ({ data, handleDelete }) => {\n    const classes = useStyles( data )\n    return (\n        <Card elevation={1}  >\n            <CardHeader\n                avatar={ \n                    <Avatar className={classes.avatar} > { data.category[0].toUpperCase() } </Avatar>\n                }\n                action={\n                    <IconButton onClick={()=> handleDelete(data.id)}>\n                        <DeleteOutline />\n                    </IconButton>\n                }\n                title={data.title}\n                subheader={data.category}\n            />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    {data.details}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default NoteCard;\n","import React,{useEffect, useState} from 'react';\n\n\n\nimport { Container } from '@mui/system';\nimport NoteCard from '../components/NoteCard';\nimport Masonry from 'react-masonry-css';\n\nimport Dexie from 'dexie';\nimport { useLiveQuery } from 'dexie-react-hooks';\n\nconst db = new Dexie('notesApp');\ndb.version(1).stores({\n    notesData: \"++id,title,details,category\"\n})\n\nconst { notesData } = db;\n\nconst breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n}\n\n\n\nexport default function Notes() {\n    const [notes, setNotes] = useState([]);\n    \n    const allItems = useLiveQuery(() => notesData.toArray(), []);\n    useEffect(() => {\n        if (allItems) {\n          setNotes(allItems);\n        }\n      }, [allItems]);\n\n\n\n    // try to get data from json server\n    // useEffect(() => {\n    //     fetch('http://localhost:8000/notes')\n    //       .then(res => res.json())\n    //       .then(data => setNotes(data))\n    //   }, [])\n    \n    // trying to get data from index db server\n    \n\n    //   this function will try to delete notes from djson server\n    const handleDelete = async (id) => {\n        // delete notes from json-server\n        // fetch('http://localhost:8000/notes/' + id, {\n        //     method: 'DELETE',\n        //     headers: {\n        //         'Access-Control-Allow-Origin': '*'\n        //     }\n        // });\n\n        await notesData.delete(id);\n\n\n        const newNote = notes.filter(note => note.id !== id);\n        setNotes(newNote);\n    }\n    \n    return (\n        <Container >\n            <Masonry\n                breakpointCols={breakpoints}\n                className=\"my-masonry-grid\"\n                columnClassName=\"my-masonry-grid_column\"\n            >\n                {/* array of JSX items */}\n                {notes.map(data => (\n                    <div item   key={data.id}>\n                        <NoteCard data={data} handleDelete={handleDelete} />\n                    </div>\n                ))}\n            </Masonry>\n            \n           \n                \n                    \n        </Container>\n    )\n}\n","import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography'\n\nimport { Container, FormControl, FormLabel, RadioGroup, FormHelperText } from '@mui/material';\n\nimport { makeStyles } from '@mui/styles';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\n\nimport TextField from '@mui/material/TextField';\n\nimport Radio  from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { flexbox } from '@mui/system';\nimport { useHistory } from 'react-router-dom';\n\nimport Dexie from 'dexie';\nimport { useLiveQuery } from 'dexie-react-hooks';\n\nconst db = new Dexie('notesApp');\ndb.version(1).stores({\n    notesData: \"++id,title,details,category\"\n})\n\nconst { notesData } = db;\n\nconst useStyles = makeStyles({\n    field: {\n        marginTop: '20px !important',\n        marginBottom: '20px !important',\n        display: 'block'\n    }\n})\n\n\n\nexport default function Create() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [title, setTitle] = useState('');\n    const [details, setDetails] = useState('');\n    const [titleError, setTitleError] = useState(false);\n    const [detailsError, setDetailsError] = useState(false);\n    const [category, setCategory] = useState('todos');\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setTitleError(false)\n        setDetailsError(false)\n\n        if (title == '') {\n            setTitleError(true)\n        }\n        if (details == '') {\n            setDetailsError(true)\n        }\n        if (title && details) {\n\n            // fetching notes data from json server\n            // fetch('http://localhost:8000/notes', {\n            //   method: 'POST',\n            //   headers: {\"Content-type\": \"application/json\"},\n            //   body: JSON.stringify({ title, details, category })\n            // }).then(() => history.push('/'))\n\n            // adding data to index db\n            await notesData.add({\n                title, details, category\n            }).then(() => history.push('/'))\n        } \n    }\n\n    return (\n        <Container size=\"sm\">\n            <Typography\n                variant=\"h6\"\n                color=\"secondary\"\n                component=\"h2\"\n                gutterBottom\n            >\n                Create a New Note\n            </Typography>\n\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField\n                    className={classes.field}\n                    onChange={(e) => setTitle(e.target.value)}\n                    label=\"Note Title\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    fullWidth\n                    required\n                    error={titleError}\n                />\n                <TextField className={classes.field}\n                    onChange={(e) => setDetails(e.target.value)}\n                    label=\"Details\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    required\n                    error={detailsError}\n                />\n\n                \n                <FormControl className={classes.field}>\n                    <FormLabel sx={{display: 'block'}}> Note Category </FormLabel>\n                    <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)} sx={{display: 'inline'}}>\n                        <FormControlLabel value='money' control={<Radio />} label=\"Money\" />\n                        <FormControlLabel value='todos' control={<Radio />} label=\"Todos\" />\n                        <FormControlLabel value='reminders' control={<Radio />} label=\"Reminders\" />\n                        <FormControlLabel value='work' control={<Radio />} label=\"Work\" /> \n                    </RadioGroup>\n                </FormControl>\n                \n                <div> {category} </div>\n\n                <Button\n                    type=\"submit\"\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    endIcon={<KeyboardArrowRightIcon />}>\n                    Submit\n                </Button>\n            </form>\n\n\n\n        </Container>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport format from 'date-fns/format';\nimport './layout.css';\n\nimport Drawer from '@mui/material/Drawer';\nimport Typography from '@mui/material/Typography';\n\nimport { List } from '@mui/material';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@mui/icons-material';\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nimport Avatar from '@mui/material/Avatar';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) =>{\n    return {\n        page: {\n            backgroundColor: '#f9f9f9',\n            width: '100%',\n            padding: theme.spacing(3)\n        },\n        drawer: {\n            // width: drawerWidth\n            width: () => {\n                if(window.innerWidth > 600){\n                    return 240;\n                } else {\n                    return 200;\n                }\n            }\n        },\n        drawerPaper: {\n            //width: drawerWidth\n            width: () => {\n                if(window.innerWidth > 600){\n                    return 240;\n                } else {\n                    return 200;\n                }\n            }\n        },\n        root: {\n            display: 'flex'\n        },\n        active: {\n            backgroundColor: 'grey'\n        },\n        title: {\n            padding: theme.spacing(2)\n        },\n        appbar: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            backgroundColor: 'white'\n        },\n        toolbar: theme.mixins.toolbar,\n        date: {\n            flexGrow: 1\n        },\n        avatar: {\n            marginLeft: 15\n        }\n        \n    }\n})\n    \nconst Layout = ({ children }) => {\n    const classes = useStyles();\n\n    const history = useHistory()\n\n    const location = useLocation()\n\n    const menuItems = [\n        {\n            text: \"My Note\",\n            icon: <SubjectOutlined color='secondary' />,\n            path: '/'\n        },\n        {\n            text: \"Create\",\n            icon: <AddCircleOutlineOutlined color='secondary' />,\n            path: '/create'\n        },\n        \n    ];\n    return (\n        <div className={classes.root}>\n            {/* app bar */}\n            <AppBar \n                className={classes.appbar} \n                // sx={{width: `calc(100% - ${drawerWidth}px)`}} \n                elevation={5}\n            >\n                <Toolbar>               \n                    <Typography \n                        className={classes.date}\n                        color='primary' \n                        textAlign='center' \n                        variant='h5' \n                        sx={{color: \"green\"}}\n                    >\n                        { format(new Date(), 'do MMMM Y') }\n                    </Typography>\n                    <Typography >\n                        Shine\n                    </Typography>\n                    <Avatar src='/logo.png' className={classes.avatar}/>\n                </Toolbar>\n            </AppBar>\n\n\n\n            {/* side draw */}\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                anchor='left'\n                classes={{ paper: classes.drawerPaper }}\n            >\n                <div>\n                    <Typography variant='h5' className={classes.title} > S Note </Typography>\n                </div>\n\n                {/* list / links */}\n                <List >\n                    { menuItems.map(item => (\n                        <ListItem\n                            button\n                            key={item.text}\n                            onClick={() => history.push(item.path)}\n                            className={location.pathname !== item.path ? classes.active : null}\n                        >\n                            <ListItemIcon> {item.icon} </ListItemIcon>\n                            <ListItemText primary={item.text} id='sideDraw-ListItemText' />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n\n\n            <div className={classes.page}> \n                <div className={classes.toolbar}></div>\n                {children} \n            </div>\n        </div>\n    )\n}\n\nexport default Layout","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Notes from './pages/Notes.jsx'\nimport Create from './pages/Create';\nimport { createTheme, ThemeProvider } from '@mui/material';\nimport { green } from '@mui/material/colors';\nimport Layout from './components/Layout.jsx';\n\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#ffd700'\n        },\n        secondary: green,\n    },\n    typography: {\n        fontFamily: 'Shantell Sans',\n    }\n})\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Router>\n                <Layout >\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Notes />\n                        </Route>\n                        <Route path=\"/create\">\n                            <Create />\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Router>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}